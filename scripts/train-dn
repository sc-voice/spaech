#!/bin/bash

if [ "$1" ]; then WAVFRAMES=$1; shift; else WAVFRAMES=1;    fi
if [ "$1" ]; then FRAMESIZE=$1; shift; else FRAMESIZE=192;  fi
if [ "$1" ]; then LAYERS=$1;    shift; else LAYERS=1;       fi
if [ "$1" ]; then EPOCH1=$1;    shift; else EPOCH1=0;       fi
if [ "$1" ]; then NOISE=$1;     shift; else NOISE=512;      fi
if [ "$1" ]; then UNITS=$1;     shift; else UNITS=9;        fi
if [ "$1" ]; then EPOCHS=$1;    shift; else EPOCHS=500;     fi
if [ "$1" ]; then CODESIZE=$1;  shift; else let CODESIZE=FRAMESIZE-2;    fi

SUFFIX=d${WAVFRAMES}l${LAYERS}c${CODESIZE}f${FRAMESIZE}
echo "LAYERS=$LAYERS UNITS=$UNITS CODESIZE=$CODESIZE" \
  "SUFFIX=$SUFFIX NOISE=$NOISE EPOCHS=$EPOCHS FRAMESIZE=$FRAMESIZE"
MODEL=ko-pana-vado
SIGTRAIN=test/data/$MODEL-noisy.wav
SIGEXP=test/data/$MODEL.wav
AUDIO=$MODEL
ATTEMPTS=3
BATCHSIZE=256

mkdir -p $MODEL

echo $MODEL "$0"
scripts/wav-coder \
  -bs $BATCHSIZE \
  -cs $CODESIZE \
  -el $LAYERS \
  -ep $EPOCHS \
  -eu 0.$UNITS \
  -fs $FRAMESIZE \
  -ie $EPOCH1 \
  -mp local/$SUFFIX/$MODEL \
  -nk $NOISE \
  -se $SIGEXP \
  -si $SIGTRAIN \
  -so local/$SUFFIX/$AUDIO.wav \
  -sve test/data/$AUDIO.wav \
  -tr $ATTEMPTS \
  -wf $WAVFRAMES \
  2>&1 | tee -a local/$SUFFIX/train.log 
RC=${PIPESTATUS[0]}
echo LAYERS=$LAYERS UNITS=$UNITS CODESIZE=$CODESIZE SUFFIX=$SUFFIX NOISE=$NOISE EPOCHS=$EPOCHS
echo "TRAINING $MODEL => $RC"
